plugins {
    id 'java'
    id 'maven-publish'
    id 'java-library'
    id "io.ebean" version "15.3.1" apply(false)
}
group 'org.start2do'

version '3.0.4.1-SNAPSHOT'
allprojects {
    apply {
        plugin 'java'
        plugin 'maven-publish'
        plugin 'java-library'
        plugin "io.ebean"
    }
    repositories {
        mavenLocal()
        maven { url 'https://mirrors.cloud.tencent.com/nexus/repository/maven-public/' }
        maven { url 'https://mirrors.163.com/maven/repository/maven-public/' }
        maven { url 'https://mirrors.huaweicloud.com/repository/maven/' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    ext {
        pushMavenUrl = "http://192.168.30.110:8081/repository/zte-releases/"
        lombokVersion = '1.18.22'
        jasperreportsVersion = '6.19.1'
        mapstructVersion = "1.4.2.Final"
        ebeanVersion = "15.3.1"
        vertxVersion = '4.3.4'
        springBootVersion = '3.2.1'
        springVersion = '6.2.1'
        springCloudVersion = '2022.0.0'
        reactorVersion = '3.5.8'
        springCloudStarterVersion = '3.1.7'
        springAliCloudVersion = '2022.0.0.0-RC2'
        curVersion = project.version == 'unspecified' ? this.rootProject.version : project.version
        jdkVersion = []
    }
    compileJava {
        def curJdkVersion = JavaVersion.VERSION_17
        for (final def j in jdkVersion) {
            if (j.key == project.name) {
                curJdkVersion = j.value
            }
        }
        sourceCompatibility = curJdkVersion
        targetCompatibility = curJdkVersion
    }
    dependencies {
        testCompileOnly("org.projectlombok:lombok:$lombokVersion")
        compileOnly("org.projectlombok:lombok:$lombokVersion")
        annotationProcessor("org.projectlombok:lombok:$lombokVersion")
        testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")
        compileOnly("org.mapstruct:mapstruct:$mapstructVersion")
        compileOnly("org.slf4j:slf4j-api:1.7.36")
        annotationProcessor("org.mapstruct:mapstruct-processor:$mapstructVersion")
        annotationProcessor("io.ebean:querybean-generator:$ebeanVersion")
        annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: springBootVersion
        compileOnly group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: springBootVersion

    }

    test {
        useJUnitPlatform()
    }

//    task sourcesJar(type: Jar) {
//        from sourceSets.main.allJava
//        archiveClassifier = 'sources'
//    }

    publishing {
        repositories {
            publications {
                maven(MavenPublication) {
                    groupId = "org.start2do"
                    artifactId = project.name
                    version = curVersion
                    from components.java
//                    artifact sourcesJar
                    versionMapping {
                        usage('java-api') {
                            fromResolutionOf('runtimeClasspath')
                        }
                        usage('java-runtime') {
                            fromResolutionResult()
                        }
                    }
                }
            }
            maven {
                if (curVersion.endsWith('-SNAPSHOT')) {
                    url System.getenv("url")
                } else {
                    url pushMavenUrl
                }
                allowInsecureProtocol true
                credentials {
                    username = System.getenv("user")
                    password = System.getenv("password")
                }
            }
        }
    }
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    configurations.all {
        resolutionStrategy {
            cacheChangingModulesFor 30, 'seconds'
            def jars = [
                    "org.springframework.integration:spring-integration-webflux": springVersion,
                    "org.springframework.boot:spring-boot-starter-actuator"     : springBootVersion,
                    "org.springframework.boot:spring-boot-starter-mail"         : springBootVersion,
                    "org.springframework.boot:spring-boot-starter-logging"      : springBootVersion,
                    "org.springframework.boot:spring-boot-starter-web"          : springBootVersion,
                    "org.springframework.boot:spring-boot-starter-aop"          : springBootVersion,
                    "org.springframework.boot:spring-boot-starter-data-redis"   : springBootVersion,
                    "org.springframework.boot:spring-boot-starter-cache"        : springBootVersion,
                    "org.springframework.boot:spring-boot-starter-jdbc"         : springBootVersion,
                    "org.springframework.data:spring-data-jdbc"                 : springBootVersion,
                    "org.springframework.boot:spring-boot-starter-webflux"      : springBootVersion,
                    "org.springframework.boot:spring-boot-starter-security"     : springBootVersion,
                    "org.springframework:spring-webflux"                        : "6.1.2",
                    "org.springframework:spring-jdbc"                           : "6.1.2",
                    "org.springframework:spring-context"                        : "6.1.2",
                    "org.springframework:spring-tx"                             : "6.1.2",
                    "org.springframework:spring-webmvc"                         : "6.1.2",
                    "org.springframework.cloud:spring-cloud-context"            : '4.0.2',
                    "org.mybatis.spring.boot:mybatis-spring-boot-starter"       : "3.0.3",
                    "io.minio:minio"                                            : "8.5.7",
                    "org.antlr:stringtemplate"                                  : "4.0.2",
                    "org.mitre.dsmiley.httpproxy:smiley-http-proxy-servlet"     : "2.0",
                    "com.github.ben-manes.caffeine:caffeine"                    : "3.1.1",
                    "com.squareup.okhttp3:okhttp"                               : "4.10.0",
                    "com.squareup.okhttp3:logging-interceptor"                  : "4.10.0",
                    "org.thymeleaf:thymeleaf"                                   : "3.0.9.RELEASE",
                    "com.aliyun:dysmsapi20170525"                               : "2.0.22",
                    "com.alibaba:fastjson"                                      : "1.2.83",
                    "jakarta.servlet:jakarta.servlet-api"                       : "6.0.0",
                    "io.ebean:querybean-generator"                              : ebeanVersion,
                    "io.ebean:ebean"                                            : ebeanVersion,
                    "io.ebean:ebean-api"                                        : ebeanVersion,
                    "io.ebean:ebean-oracle"                                     : ebeanVersion,
                    "io.ebean:ebean-querybean"                                  : ebeanVersion,
                    "io.ebean:ebean-ddl-generator"                              : ebeanVersion,
                    "org.mapstruct:mapstruct"                                   : mapstructVersion,
                    "com.google.guava:guava"                                    : "33.0.0-jre",
                    "io.ebean:ebean-migration"                                  : "13.6.0",
                    "jakarta.xml.bind:jakarta.xml.bind-api"                     : "2.3.3",
                    "org.glassfish.jaxb:jaxb-runtime"                           : "2.3.6",
                    "com.alibaba:easyexcel"                                     : "3.1.1",
                    "org.slf4j:slf4j-api"                                       : "2.0.5",
                    "org.slf4j:log4j-over-slf4j"                                : "1.7.36",
                    "org.apache.commons:commons-lang3"                          : "3.12.0",
                    "javax.sip:jain-sip-ri"                                     : "1.3.0-91",
                    "org.quartz-scheduler:quartz"                               : "2.3.2",
                    "org.reflections:reflections"                               : "0.10.2",
                    "io.vertx:vertx-core"                                       : "4.5.1",
                    "io.vertx:vertx-mqtt"                                       : "4.5.1",
                    "com.zaxxer:HikariCP"                                       : "5.0.1",
                    "jakarta.persistence:jakarta.persistence-api"               : "3.1.0",
                    "io.projectreactor:reactor-core"                            : reactorVersion,
                    "com.fasterxml.jackson.core:jackson-annotations"            : "2.15.2",
                    "com.fasterxml.jackson.core:jackson-databind"               : "2.15.2",
                    "com.fasterxml.jackson.core:jackson-core"                   : "2.15.2",
                    "jakarta.validation:jakarta.validation-api"                 : "3.0.2",
                    "one.util:streamex"                                         : "0.8.2",
            ]
            dependencySubstitution {
                for (final def jar in jars) {
                    substitute module(jar.key) with module("${jar.key}:${jar.value}")
                }
            }
        }
    }
}
task cleanTemp(dependsOn: [':clean']) {
    dependsOn ':clean'
}
task buildTaskClass(dependsOn: ['cleanTemp']) {
    dependsOn ':classes'
}
task push(dependsOn: ['buildTaskClass']) {
    dependsOn(":jar")
    dependsOn(":publishMavenPublicationToMavenRepository")
}


